#
#  Copyright 2022 DataStax, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#

{{- if .Values.extra.pulsarBeam }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsarBeam.component }}"
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "pulsar.name" . }}
    chart: {{ template "pulsar.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Values.pulsarBeam.component }}
    cluster: {{ template "pulsar.fullname" . }}
spec:
  replicas: {{ .Values.pulsarBeam.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "pulsar.name" . }}
      release: {{ .Release.Name }}
      component: {{ .Values.pulsarBeam.component }}
  template:
    metadata:
      labels:
        app: {{ template "pulsar.name" . }}
        release: {{ .Release.Name }}
        component: {{ .Values.pulsarBeam.component }}
        cluster: {{ template "pulsar.fullname" . }}
      annotations:
      {{- if .Values.pulsarBeam.annotations }}
{{ toYaml .Values.pulsarBeam.annotations | indent 8 }}
      {{- end }}
      {{- if .Values.restartOnConfigMapChange.enabled }}
        checksum/config: {{ include (print $.Template.BasePath "/beam/beamwh-configmap.yaml") . | sha256sum }}
      {{- end }}
    spec:
      {{- if .Values.priorityClass.enabled }}
      priorityClassName: pulsar-priority
      {{- end }}
    {{- if and (.Values.nodeSelector) (not .Values.pulsarBeam.nodeSelector) }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.pulsarBeam.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.pulsarBeam.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.pulsarBeam.tolerations }}
      tolerations:
{{ toYaml .Values.pulsarBeam.tolerations | indent 8 }}
    {{- end }}
      affinity:
        {{- if .Values.pulsarBeam.nodeAffinity }}
        nodeAffinity:
{{ toYaml .Values.pulsarBeam.nodeAffinity | indent 10 }}
        {{- end }}
        {{- if .Values.enableAntiAffinity }}
        podAntiAffinity:
        {{- if .Values.pulsarBeam.podAntiAffinity }}
{{ toYaml .Values.pulsarBeam.podAntiAffinity | indent 10 }}
        {{- else }}
          {{- if .Values.antiAffinity.host.enabled }}
          {{- if eq .Values.antiAffinity.host.mode "preferred" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - "{{ template "pulsar.name" . }}"
                - key: "release"
                  operator: In
                  values:
                  - {{ .Release.Name }}
                - key: "component"
                  operator: In
                  values:
                  - {{ .Values.pulsarBeam.component }}
              topologyKey: "kubernetes.io/hostname"
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: In
                values:
                - "{{ template "pulsar.name" . }}"
              - key: "release"
                operator: In
                values:
                - {{ .Release.Name }}
              - key: "component"
                operator: In
                values:
                - {{ .Values.pulsarBeam.component }}
            topologyKey: "kubernetes.io/hostname"
          {{- end }}
          {{- end }}
          {{- if .Values.antiAffinity.zone.enabled }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: failure-domain.beta.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - "{{ template "pulsar.name" . }}"
                - key: "release"
                  operator: In
                  values:
                  - {{ .Release.Name }}
                - key: "component"
                  operator: In
                  values:
                  - {{ .Values.pulsarBeam.component }}
          {{- end }}
        {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.pulsarBeam.gracePeriod | default 60 }}
      volumes:
        {{- if .Values.enableTls }}
        - name: certs
          secret:
            secretName: "{{ .Values.tlsSecretName }}"
        {{- end }}
        {{- if .Values.enableTokenAuth }}
        - name: token-private-key
          secret:
            secretName: token-private-key
        - name: token-public-key
          secret:
            secretName: token-public-key
        {{- end }}
      containers:
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsarBeam.component }}"
        image: "{{ .Values.image.pulsarBeam.repository }}:{{ .Values.image.pulsarBeam.tag }}"
        imagePullPolicy: {{ .Values.image.pulsarBeam.pullPolicy }}
      {{- if .Values.pulsarBeam.resources }}
        resources:
{{ toYaml .Values.pulsarBeam.resources | indent 10 }}
      {{- end }}
        args: ["-mode", "broker"]
        volumeMounts:
          {{- if .Values.enableTls }}
          - name: certs
            readOnly: true
            mountPath: /pulsar/certs
          {{- end }}
          {{- if .Values.enableTokenAuth }}
          - mountPath: "/pulsar/token-private-key"
            name: token-private-key
            readOnly: true
          - mountPath: "/pulsar/token-public-key"
            name: token-public-key
            readOnly: true
          {{- end }}
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsarBeam.component }}"
        env:
          - name: ProcessMode
            value: "broker"
          - name: PORT
            value: "8085"
          - name: CLUSTER
            value: {{ template "pulsar.fullname" . }}
          - name: SuperRoles
            value: {{ .Values.tokenServer.allowedRoles }}
          {{- if .Values.enableTokenAuth }}
          - name: PulsarPublicKey
            value: "/pulsar/token-public-key/{{ .Values.tokenPublicKeyFile }}"
          - name: PulsarPrivateKey
            value: "/pulsar/token-private-key/{{ .Values.tokenPrivateKeyFile }}"
          - name: DbPassword
            valueFrom:
              secretKeyRef:
                name: token-superuser
                key: superuser.jwt
          {{- end }}
          - name: PbDbType
            value: {{ .Values.pulsarBeam.dbType | default "pulsarAsDb"}}
          - name: DbName
            value: {{ .Values.pulsarBeam.dbName | default "persistent://public/default/beamConfig" }}
          - name: LogLevel
            value: {{ .Values.pulsarBeam.logLevel | default "info" }}
          {{- if .Values.enableTokenAuth }}
          - name: HTTPAuthImpl
            value: "JWT"
          {{- else }}
          - name: HTTPAuthImpl
            value: "noauth"
          {{- end }}
          {{- if .Values.enableTls }}
          - name: PulsarTLSValidateHostname
            value: "false"
          - name: CertFile
            value: /pulsar/certs/tls.crt
          - name: KeyFile
            value: /pulsar/certs/tls.key
          - name: TrustStore
            {{- if or .Values.secrets .Values.createCertificates.selfSigned.enabled .Values.createCertificates.selfSignedPerComponent.enabled }}
            value: /pulsar/certs/ca.crt
            {{- else }}
            value: "{{ .Values.pulsarBeam.tlsCaPath }}/{{ .Values.pulsarBeam.tlsCaCert }}"
            {{- end }}
          - name: PulsarBrokerURL
            value: "pulsar+ssl://{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}.{{ template "pulsar.serviceDnsSuffix" . }}:6651"
          {{- else }}
          - name: PulsarBrokerURL
            value: "pulsar://{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}.{{ template "pulsar.serviceDnsSuffix" . }}:6650"
          {{- end }}
{{- end }}

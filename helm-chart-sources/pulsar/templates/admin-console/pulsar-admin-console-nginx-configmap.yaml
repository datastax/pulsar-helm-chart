#
#  Copyright 2021 DataStax, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#

{{- if .Values.extra.pulsarAdminConsole }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsarAdminConsole.component }}-nginx"
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "pulsar.name" . }}
    chart: {{ template "pulsar.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Values.pulsarAdminConsole.component }}-nginx
    cluster: {{ template "pulsar.fullname" . }}
data:
  nginx.conf: |
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    pid        /tmp/nginx.pid;
    events {
      worker_connections  10240;
    }
    http {
      proxy_temp_path /tmp/proxy_temp;
      client_body_temp_path /tmp/client_temp;
      fastcgi_temp_path /tmp/fastcgi_temp;
      uwsgi_temp_path /tmp/uwsgi_temp;
      scgi_temp_path /tmp/scgi_temp;

      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log        /var/log/nginx/access.log main;

      upstream backend {
        server localhost:6454;
      }

      upstream http-pulsar-proxy {
        server {{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:8080;
      }

      upstream https-pulsar-proxy {
        server {{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:8443;
      }

      upstream pulsar-burnell {
        server {{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:8964;
      }

      upstream ws-pulsar-proxy {
      {{- if .Values.enableTls }}
        server {{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:8001;
      {{- else }}
        server {{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:8000;
      {{- end }}
      }

      {{- if .Values.keycloak.enabled }}
      upstream {{ .Release.Name }}-keycloak {
         {{- if .Values.enableTls }}
         server {{ template "pulsar.keycloak.fullname" . }}:{{ .Values.keycloak.service.httpsPort }};
         {{- else }}
         server {{ template "pulsar.keycloak.fullname" . }}:{{ .Values.keycloak.service.port }};
         {{- end }}
      }
      {{- end }}

      server {

            location /ruok {
              access_log off;
              return 200 "I'm good\n";
            }

            location / {
               proxy_set_header Host $host;
               proxy_set_header X-Forwarded-For $remote_addr;
               proxy_set_header X-Forwarded-Proto $scheme;
               proxy_pass_header Set-Cookie;
               proxy_pass http://backend;
            }

            location /ws/ {
              {{- if .Values.enableTls }}
              proxy_pass https://ws-pulsar-proxy;
              {{- else }}
              proxy_pass http://ws-pulsar-proxy;
              {{- end }}
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "Upgrade";
              proxy_set_header Host $host;
            }

            # General cluster forwarding rule for functions
            location ^~ /api/v1/{{ template "pulsar.fullname" . }}/functions {
              proxy_set_header Accepts application/json;
              rewrite ^/api/v1/{{ template "pulsar.fullname" . }}/functions/(.*)$ /admin/v3/functions/$1 break;
              proxy_pass http://http-pulsar-proxy$uri$is_args$args;
            }

            # Cluster forwarding rule for sinks
            location ^~ /api/v1/{{ template "pulsar.fullname" . }}/sinks {
              rewrite ^/api/v1/{{ template "pulsar.fullname" . }}/sinks/(.*)$ /admin/v3/sinks/$1 break;
              proxy_pass http://http-pulsar-proxy$uri$is_args$args;
            }

            # Cluster forwarding rule for sources
            location ^~ /api/v1/{{ template "pulsar.fullname" . }}/sources {
              rewrite ^/api/v1/{{ template "pulsar.fullname" . }}/sources/(.*)$ /admin/v3/sources/$1 break;
              proxy_pass http://http-pulsar-proxy$uri$is_args$args;
            }

            # Cluster forwarding rule for Burnell
            location ^~ /api/v2/{{ template "pulsar.fullname" . }}/br/ {
              rewrite ^/api/v2/{{ template "pulsar.fullname" . }}/br/(.*)$ /$1 break;
              {{- if .Values.enableTls }}
              proxy_pass https://pulsar-burnell$uri$is_args$args;
              {{- else }}
              proxy_pass http://pulsar-burnell$uri$is_args$args;
              {{- end }}
            }

            # K8s cluster forwarding rule api v2 (Burnell)
            location ^~ /api/v2/{{ template "pulsar.fullname" . }} {
              rewrite ^/api/v2/{{ template "pulsar.fullname" . }}/(.*)$ /admin/v2/$1 break;
              {{- if .Values.enableTls }}
              proxy_pass https://pulsar-burnell$uri$is_args$args;
              {{- else }}
              proxy_pass http://pulsar-burnell$uri$is_args$args;
              {{- end }}
            }

            # K8s cluster forwarding rule api v1
            location ^~ /api/v1/{{ template "pulsar.fullname" . }} {
              rewrite ^/api/v1/{{ template "pulsar.fullname" . }}/(.*)$ /admin/v2/$1 break;
              proxy_pass http://http-pulsar-proxy$uri$is_args$args;
            }

            # For use when keycloak is the authentication/identity provider
            {{- if .Values.keycloak.enabled }}
            location ^~ /api/v1/auth/token {
              rewrite  ^.*$ /auth/realms/{{ .Values.keycloak.realm }}/protocol/openid-connect/token break;
              proxy_pass {{ template "pulsar.get.http.or.https" . }}{{ .Release.Name }}-keycloak$uri$is_args$args;
            }
            {{- end }}

            listen 8080 default_server;
            {{- if .Values.enableTls }}
            listen 8443 ssl;
            ssl_certificate /certs/tls.crt;
            ssl_certificate_key /certs/tls.key;
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
            {{- end }}

      }

      server {

        location = /nginx_status {
          stub_status;

          access_log off;
          allow 127.0.0.1;
          deny all;

        }

        listen 8081 ;

      }

    }
{{- end }}

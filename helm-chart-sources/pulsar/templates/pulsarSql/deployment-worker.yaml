#
#  Copyright 2022 DataStax, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#

{{- if .Values.extra.pulsarSQL }}
{{- if gt (int .Values.pulsarSQL.server.workers) 0 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "presto.worker" . }}
  labels:
    app: {{ template "presto.name" . }}
    chart: {{ template "presto.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: worker
spec:
  replicas: {{ .Values.pulsarSQL.server.workers }}
  selector:
    matchLabels:
      app: {{ template "presto.name" . }}
      release: {{ .Release.Name }}
      component: worker
  template:
    metadata:
      labels:
        app: {{ template "presto.name" . }}
        release: {{ .Release.Name }}
        component: worker
    spec:
      dnsConfig:
{{ toYaml .Values.dnsConfig | indent 8 }}
      {{- if .Values.pulsarSQL.image.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.pulsarSQL.image.securityContext.runAsUser }}
        runAsGroup: {{ .Values.pulsarSQL.image.securityContext.runAsGroup }}
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "presto.worker" . }}
        {{- if .Values.enableTls }}
        - name: certs
          secret:
            secretName: "{{ .Values.tlsSecretName }}"
          {{- if .Values.tls.zookeeper.enabled}}
        - name: certconverter
          configMap:
            name: "{{ template "pulsar.fullname" . }}-certconverter-configmap"
            defaultMode: 0755
          {{- end }}
        {{- end }}
        {{- if .Values.enableTokenAuth }}
        - name: token-public-key
          secret:
            secretName: token-public-key
        - name: token-superuser
          secret:
            secretName: token-superuser
        {{- end }}
        {{- if .Values.storageOffload.driver }}
        {{- if eq .Values.storageOffload.driver "google-cloud-storage" }}
        - name: gcp-service-account
          secret:
            secretName: {{ .Values.storageOffload.gcsServiceAccountSecret }}
        {{- end }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}-worker
          image: "{{ .Values.image.pulsarSQL.repository }}:{{ .Values.image.pulsarSQL.tag }}"
          imagePullPolicy: {{ .Values.image.pulsarSQL.pullPolicy }}
          {{- if .Values.storageOffload.driver }}
          {{- if eq .Values.storageOffload.driver "aws-s3" }}
          env:
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.storageOffload.accessKey }}
          - name: AWS_SECRET_ACCESS_KEY
            value: {{ .Values.storageOffload.accessSecret }}
          {{- end }}
          {{- end }}
          volumeMounts:
            - mountPath: /pulsar/conf/presto/node.properties
              name: config-volume
              subPath: node.properties
            - mountPath: /pulsar/conf/presto/log.properties
              name: config-volume
              subPath: log.properties
            - mountPath: /pulsar/conf/presto/jvm.config
              name: config-volume
              subPath: jvm.config
            - mountPath: /pulsar/conf/presto/config.properties
              name: config-volume
              subPath: config.properties
            - mountPath: /pulsar/conf/presto/catalog/pulsar.properties
              name: config-volume
              subPath: pulsar.properties
            - mountPath: /pulsar/conf/presto/health_check.sh
              name: config-volume
              subPath: health_check.sh
            {{- if .Values.enableTls }}
            - name: certs
              readOnly: true
              mountPath: /pulsar/certs
              {{- if .Values.tls.zookeeper.enabled}}
            - name: certconverter
              mountPath: /pulsar/tools
              {{- end }}
            {{- end }}
            {{- if .Values.enableTokenAuth }}
            - mountPath: "/pulsar/token-public-key"
              name: token-public-key
              readOnly: true
            - mountPath: "/pulsar/token-superuser"
              name: token-superuser
              readOnly: true
            {{- end }}
            {{- if .Values.storageOffload.driver }}
            {{- if eq .Values.storageOffload.driver "google-cloud-storage" }}
            - name: gcp-service-account
              readOnly: true
              mountPath: /pulsar/gcp-service-account
            {{- end }}
            {{- end }}
          command: ["sh", "-c"]
          args:
            - >-
              {{- if .Values.enableTokenAuth }}
              cat /pulsar/token-superuser/superuser.jwt | tr -d '\n' > /pulsar/token-superuser-stripped.jwt &&
              {{- end }}
              {{- if .Values.enableTls }}
              openssl pkcs8 -topk8 -inform PEM -outform PEM -in /pulsar/certs/tls.key -out /pulsar/tls-pk8.key -nocrypt &&
              {{- end }}
              {{- if and .Values.enableTls .Values.tls.zookeeper.enabled }}
              /pulsar/tools/certconverter.sh &&
              {{- end }}
              OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar sql-worker run \
                --etc-dir=/pulsar/conf/presto \
                --data-dir=/pulsar/data;
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - /pulsar/conf/presto/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 25
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - /pulsar/conf/presto/health_check.sh
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
{{ toYaml .Values.pulsarSQL.resources | indent 12 }}
    {{- with .Values.pulsarSQL.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.pulsarSQL.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.pulsarSQL.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

{{- end }}
{{- end }}

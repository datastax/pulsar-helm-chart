#
#  Copyright 2021 DataStax, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#
image:
  broker:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.0
  brokerSts:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.0
  function:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.0
  zookeeper:
    repository: datastax/lunastreaming
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.0
  bookkeeper:
    repository: datastax/lunastreaming
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.0
  proxy:
    repository: datastax/lunastreaming
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.0
  bastion:
    repository: datastax/lunastreaming
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.0
  pulsarBeam:
    repository: kesque/pulsar-beam
    pullPolicy: IfNotPresent
    tag: 1.0.0
  burnell:
    repository: datastax/burnell
    pullPolicy: Always
    tag: 1.0.0
  burnellLogCollector:
    repository: datastax/burnell
    pullPolicy: IfNotPresent
    tag: logcollector_latest
  pulsarSQL:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.0
  tardigrade:
    repository: storjlabs/gateway
    pullPolicy: IfNotPresent
    tag: latest
  pulsarHeartbeat:
    repository: datastax/pulsar-heartbeat
    pullPolicy: IfNotPresent
    tag: 1.0.2
  pulsarAdminConsole:
    repository: datastax/pulsar-admin-console
    pullPolicy: IfNotPresent
    tag: 1.0.0

enableAntiAffinity: false
enableTls: false
enableTokenAuth: false
restartOnConfigMapChange:
  enabled: true
extra:
  function: true
  burnell: true
  burnellLogCollector: true
  pulsarHeartbeat: true
  pulsarAdminConsole: true

zookeeper:
  replicaCount: 1
  resources:
    requests:
      memory: 300Mi
      cpu: 0.3
  configData:
    PULSAR_MEM: "\"-Xms300m -Xmx300m -Djute.maxbuffer=10485760 -XX:+ExitOnOutOfMemoryError\""

bookkeeper:
  replicaCount: 1
  resources:
    requests:
      memory: 512Mi
      cpu: 0.3
  configData:
    BOOKIE_MEM: "\"-Xms312m -Xmx312m -XX:MaxDirectMemorySize=200m -XX:+ExitOnOutOfMemoryError\""

broker:
  component: broker
  service:
    annotations: {}
    type: ClusterIP
    headless: false
    ports:
    - name: http
      port: 8080
    - name: pulsar
      port: 6650
    - name: https
      port: 8443
    - name: pulsarssl
      port: 6651
    - name: kafkaplaintext
      port: 9092
    - name: kafkassl
      port: 9093
  replicaCount: 1
  ledger:
    defaultEnsembleSize: 1
    defaultAckQuorum: 1
    defaultWriteQuorum: 1
  resources:
    requests:
      memory: 600Mi
      cpu: 0.3
  configData:
    PULSAR_MEM: "\"-Xms400m -Xmx400m -XX:MaxDirectMemorySize=200m -XX:+ExitOnOutOfMemoryError\""
  kafkaOnPulsarEnabled: true
  kafkaOnPulsar:
    kafkaListeners: "PLAINTEXT://0.0.0.0:9092"
    kafkaAdvertisedListeners: "PLAINTEXT://127.0.0.1:19092"
    brokerEntryMetadataInterceptors: "org.apache.pulsar.common.intercept.AppendIndexMetadataInterceptor,org.apache.pulsar.common.intercept.AppendBrokerTimestampMetadataInterceptor"

# Envoy proxy for Kafka-on-Pulsar
# all parameters: https://github.com/slamdev/helm-charts/blob/master/charts/envoy/values.yaml
# and https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/network_filters/kafka_broker_filter
envoy:
  enabled: true
  image:
    repository: "envoyproxy/envoy-alpine"
    tag: "v1.18.2"
  # Healthchecks to run against the admin interface
  # hence it has to be enabled and ports have to match.
  livenessProbe:
    httpGet:
      path: /ready
      port: 9901
    initialDelaySeconds: 5
    timeoutSeconds: 5
  readinessProbe:
    httpGet:
      path: /ready
      port: 9901
    initialDelaySeconds: 5
    timeoutSeconds: 3
  service:
    annotations: {}
    type: LoadBalancer
    port: 19092
    autoPortAssign:
      enabled: false
  serviceMonitor:
    enabled: false
  containerPort: 19092
  configYaml: |-
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 19092  # Port that Kafka clients should connect to.
        filter_chains:
        - filters:
          - name: envoy.filters.network.kafka_broker
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.kafka_broker.v3.KafkaBroker
              stat_prefix: exampleprefix
          - name: envoy.filters.network.tcp_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
              stat_prefix: tcp
              cluster: kop_cluster
      clusters:
      - name: kop_cluster
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: some_service
          endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: pulsar-broker # Kafka broker's host
                      port_value: 9092 # Kafka broker's port.

autoRecovery:
  resources:
    requests:
      memory: 300Mi
      cpu: 0.3

function:
  replicaCount: 1
  functionReplicaCount: 1
  resources:
    requests:
      memory: 512Mi
      cpu: 0.3
  configData:
    PULSAR_MEM: "\"-Xms312m -Xmx312m -XX:MaxDirectMemorySize=200m -XX:+ExitOnOutOfMemoryError\""

proxy:
  replicaCount: 1
  resources:
    requests:
      memory: 512Mi
      cpu: 0.3
  wsResources:
    requests:
      memory: 512Mi
      cpu: 0.3
  configData:
    PULSAR_MEM: "\"-Xms400m -Xmx400m -XX:MaxDirectMemorySize=112m\""
  autoPortAssign:
    enablePlainTextWithTLS: true
  service:
    autoPortAssign:
      enabled: true

grafanaDashboards:
  enabled: true

pulsarAdminConsole:
  replicaCount: 1

kube-prometheus-stack:
  enabled: true
  prometheusOperator:
    enabled: true
  grafana:
    enabled: true
    adminPassword: e9JYtk83*4#PM8

#
#  Copyright 2022 DataStax, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#

# Please note that this example works only with Luna Streaming 2.8.0.1.1.5+

image:
  broker:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.26
  brokerSts:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.26
  function:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.26
  zookeeper:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.26
  bookkeeper:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.26
  proxy:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.26
  bastion:
    repository: datastax/lunastreaming-all
    pullPolicy: IfNotPresent
    tag: 2.8.0_1.1.26

enableAntiAffinity: false
enableTls: true
enableTokenAuth: true
restartOnConfigMapChange:
  enabled: true
extra:
  function: true
  burnell: false
  burnellLogCollector: false
  pulsarHeartbeat: false
  pulsarAdminConsole: false

cert-manager:
  enabled: true

createCertificates:
  selfSigned:
    enabled: true

zookeeper:
  replicaCount: 1
  resources:
    requests:
      memory: 300Mi
      cpu: 0.3
  configData:
    PULSAR_MEM: "-Xms300m -Xmx300m -Djute.maxbuffer=10485760 -XX:+ExitOnOutOfMemoryError"

bookkeeper:
  replicaCount: 1
  resources:
    requests:
      memory: 512Mi
      cpu: 0.3
  configData:
    BOOKIE_MEM: "-Xms312m -Xmx312m -XX:MaxDirectMemorySize=200m -XX:+ExitOnOutOfMemoryError"

broker:
  component: broker
  service:
    annotations: {}
    type: ClusterIP
    headless: false
    ports:
    - name: http
      port: 8080
    - name: pulsar
      port: 6650
    - name: https
      port: 8443
    - name: pulsarssl
      port: 6651
    - name: kafkaplaintext
      port: 9092
    - name: kafkassl
      port: 9093
    - name: kafkaschemareg
      port: 8001
  replicaCount: 2
  ledger:
    defaultEnsembleSize: 1
    defaultAckQuorum: 1
    defaultWriteQuorum: 1
  resources:
    requests:
      memory: 200Mi
      cpu: 0.1
  configData:
    PULSAR_MEM: "-Xms400m -Xmx400m -XX:MaxDirectMemorySize=200m -XX:+ExitOnOutOfMemoryError"
    PULSAR_PREFIX_protocolHandlerDirectory: "./protocols"
    PULSAR_PREFIX_messagingProtocols: "kafka"
    PULSAR_PREFIX_brokerDeleteInactiveTopicsEnabled: "false"
    PULSAR_PREFIX_saslAllowedMechanisms: PLAIN
    PULSAR_PREFIX_brokerEntryMetadataInterceptors: "org.apache.pulsar.common.intercept.AppendIndexMetadataInterceptor,org.apache.pulsar.common.intercept.AppendBrokerTimestampMetadataInterceptor"
    PULSAR_PREFIX_kopSchemaRegistryEnable: "true"
    PULSAR_PREFIX_allowAutoTopicCreationType: "partitioned"
    PULSAR_PREFIX_kafkaListeners: "SASL_PLAINTEXT://0.0.0.0:9092"
    PULSAR_PREFIX_kafkaAdvertisedListeners: "SASL_PLAINTEXT://advertisedAddress:9092"
    PULSAR_PREFIX_kafkaTransactionCoordinatorEnabled: "true"
    PULSAR_PREFIX_kafkaNamespace: "kafka"
    PULSAR_PREFIX_kopSchemaRegistryNamespace: "__kafka_unlimited"
    PULSAR_PREFIX_kafkaTransactionProducerIdsNamespace: "__kafka_unlimited"
    PULSAR_PREFIX_kafkaManageSystemNamespaces: "false"

autoRecovery:
  enableProvisionContainer: yes
  resources:
    requests:
      memory: 300Mi
      cpu: 0.3


function:
  replicaCount: 1
  functionReplicaCount: 1
  resources:
    requests:
      memory: 512Mi
      cpu: 0.3
  configData:
    PULSAR_MEM: "-Xms312m -Xmx312m -XX:MaxDirectMemorySize=200m -XX:+ExitOnOutOfMemoryError"

proxy:
  replicaCount: 1
  resources:
    requests:
      memory: 512Mi
      cpu: 0.3
  wsResources:
    requests:
      memory: 512Mi
      cpu: 0.3
  configData:
    PULSAR_MEM: "-Xms400m -Xmx400m -XX:MaxDirectMemorySize=112m"
    PULSAR_PREFIX_kafkaListeners: "SASL_PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093"
# here you have to customize the advertised name if you want to access
# Kafka from outside the kube    
# Drop the SASL_PLAINTEXT endpoint if you want to allow only TLS (here and above)
# The Proxy uses the same TLS certificate configured for the Pulsar protocol
#    PULSAR_PREFIX_kafkaAdvertisedListeners: "SASL_PLAINTEXT://pulsar-proxy:9092,SASL_SSL://pulsar-proxy:9093"
# if you use port forwarding to localhost then you have to set 'localhost'    
    PULSAR_PREFIX_kafkaAdvertisedListeners: "SASL_PLAINTEXT://localhost:9092,SASL_SSL://localhost:9093"
    PULSAR_PREFIX_saslAllowedMechanisms: PLAIN
    PULSAR_PREFIX_kafkaProxySuperUserRole: superuser
    PULSAR_PREFIX_kopSchemaRegistryProxyEnableTls: "true"
    PULSAR_PREFIX_kopSchemaRegistryEnable: "true"
    PULSAR_PREFIX_kopSchemaRegistryProxyPort: "8081"
    PULSAR_PREFIX_kafkaTransactionCoordinatorEnabled: "true"
    PULSAR_PREFIX_kafkaNamespace: "kafka"
    PULSAR_PREFIX_kopSchemaRegistryNamespace: "__kafka_unlimited"
    PULSAR_PREFIX_kafkaTransactionProducerIdsNamespace: "__kafka_unlimited"
    PULSAR_PREFIX_kafkaManageSystemNamespaces: "false"

  autoPortAssign:
    enablePlainTextWithTLS: true
  service:
    type: ClusterIP
    autoPortAssign:
      enabled: true
  extensions:
    enabled: true
    extensions: "kafka"
    containerPorts:
      - name: kafkaplaintext
        containerPort: 9092
      - name: kafkassl
        containerPort: 9093
      - name: kafkaschemareg
        containerPort: 8081
    servicePorts:
     - name: kafkaplaintext
       port: 9092
       protocol: TCP
       targetPort: kafkaplaintext
     - name: kafkassl
       port: 9093
       protocol: TCP
       targetPort: kafkassl      
     - name: kafkaschemareg
       port: 8081
       protocol: TCP
       targetPort: kafkaschemareg
pulsarAdminConsole:
  replicaCount: 1
  service:
    type: ClusterIP
kube-prometheus-stack:
  enabled: false
  prometheusOperator:
    enabled: false
  grafana:
    enabled: false
    adminPassword: e9JYtk83*4#PM8
    service:
      type: ClusterIP    
